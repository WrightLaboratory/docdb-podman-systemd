---
- hosts: localhost
  vars_prompt:
  - name: docdb_project_name
    prompt: "Please provide the name of your research project or collaboration in 'CamelCase'"
    private: false
  - name: docdb_webmaster_name
    prompt: "Please provide the contact name for this DocDb web instance"
    private: false
  - name: docdb_webmaster_email
    prompt: "Please provide the contact email for this DocDb web instance"
    private: false
  - name: docdb_web_admin_password
    prompt: "Please provide a password to access the administrator only pages of this DocDB instance"
    private: false
  - name: docdb_web_user_passwd
    prompt: "Please provide a password for routine user access to the pages of this DocDB instance"
    private: false
  - name: docdb_web_reader_passwd
    prompt: "Please provide a password for read-only access to the pages of this DocDB instance"
    private: false

  tasks:
  - name: check for existence of ~/.ansible/{{ docdb_project_name }}-secrets.yml
    ansible.builtin.stat:
      path: ~/.ansible/{{ docdb_project_name }}-secrets.yml
    register: secrets_file

  - name: check for existence of ~/.ansible/vaultpassword
    ansible.builtin.stat:
      path: ~/.ansible/vaultpassword
    register: password_file

  - name: create secret file
    block:
    - name: create random string and save it in mysql_root_password
      ansible.builtin.set_fact:
        mysql_root_password: "{{ lookup('community.general.random_string', special=true, override_special='_-#+*', length=20, min_special=1, ignore_similar_chars=true) }}"
      no_log: true
    - name: create random string and save it in mysql_password
      ansible.builtin.set_fact:
        mysql_password: "{{ lookup('community.general.random_string', special=true, override_special='_-.', length=12, min_special=1, ignore_similar_chars=true) }}"
      no_log: true
    - name: display mysql password
      ansible.builtin.debug:
        msg: "Password generated for DocDB database admin {{ docdb_project_name }}_admin: {{ mysql_password }}"
    - name: create random string and save it in docdb_db_user_rw_passwd
      ansible.builtin.set_fact:
        docdb_db_user_rw_passwd: "{{ lookup('community.general.random_string', special=true, override_special='_-.', length=12, min_special=1, ignore_similar_chars=true) }}"
      no_log: true
    - name: create random string and save it in docdb_db_user_ro_passwd
      ansible.builtin.set_fact:
        docdb_db_user_ro_passwd: "{{ lookup('community.general.random_string', special=true, override_special='_-.', length=12, min_special=1, ignore_similar_chars=true) }}"
      no_log: true

    - name: create docdb secrets variable file in ~/.ansible on control node
      ansible.builtin.template:
        src: docdb-secrets.yml.j2
        dest: ~/.ansible/{{ docdb_project_name }}-secrets.yml
        mode: '0600'
    when: not secrets_file.stat.exists

  - name: create default ansible vault password file (~/.ansible/vaultpassword) with correct permissons
    ansible.builtin.copy:
      dest: ~/.ansible/vaultpassword
      mode: '0600'
      content: |
        "{{ lookup('community.general.random_string', special=true, length=16, min_special=1, ignore_similar_chars=true) }}"
    when: not password_file.stat.exists
